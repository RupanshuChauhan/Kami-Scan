import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'

export async function GET(request: NextRequest) {
  try {
    const session = await auth()
    
    if (!session?.user?.email) {
      return NextResponse.json(
        { error: 'Unauthorized' },
        { status: 401 }
      )
    }

    // Mock analytics data for now to avoid build errors
    const mockAnalytics = {
      totalSummaries: 42,
      totalChatSessions: 15,
      averageProcessingTime: 2.3,
      userSatisfaction: 4.8,
      totalUsers: 128,
      conversionRate: 23.5,
      retentionRate: 87.2,
      weeklyGrowth: 12.5,
      weeklyUsage: [
        { day: 'Mon', count: 5 },
        { day: 'Tue', count: 8 },
        { day: 'Wed', count: 12 },
        { day: 'Thu', count: 6 },
        { day: 'Fri', count: 15 },
        { day: 'Sat', count: 3 },
        { day: 'Sun', count: 2 }
      ],
      monthlyUsage: [
        { month: 'Jan', summaries: 45, timesSaved: 120 },
        { month: 'Feb', summaries: 67, timesSaved: 180 },
        { month: 'Mar', summaries: 89, timesSaved: 240 },
        { month: 'Apr', summaries: 123, timesSaved: 330 }
      ],
      recentActivity: [
        {
          id: '1',
          type: 'summary',
          title: 'Document Analysis Complete',
          timestamp: new Date().toISOString(),
          user: 'John Doe'
        },
        {
          id: '2', 
          type: 'chat',
          title: 'PDF Chat Session Started',
          timestamp: new Date(Date.now() - 3600000).toISOString(),
          user: 'Jane Smith'
        }
      ],
      topUsers: [
        { name: 'John Doe', email: 'john@example.com', summaries: 25, timesSaved: 5.2 },
        { name: 'Jane Smith', email: 'jane@example.com', summaries: 18, timesSaved: 3.8 }
      ],
      deviceStats: {
        desktop: 65,
        mobile: 35
      },
      geographicData: [
        { country: 'United States', users: 45 },
        { country: 'Canada', users: 23 },
        { country: 'United Kingdom', users: 18 }
      ]
    }

    return NextResponse.json(mockAnalytics)

  } catch (error) {
    console.error('Analytics API error:', error)
    return NextResponse.json(
      { error: 'Failed to fetch analytics data' },
      { status: 500 }
    )
  }
}
